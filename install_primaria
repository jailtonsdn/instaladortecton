#!/bin/bash

# Verificar se o script está sendo executado como root
if [ "$EUID" -ne 0 ]; then
  echo "Por favor, execute como root"
  exit
fi

# Verifique se o Node.js está instalado
if ! command -v node &> /dev/null
then
    echo "Node.js não encontrado, instalando..."
    apt update
    apt install -y nodejs npm
fi

# Verifique se o PM2 está instalado
if ! command -v pm2 &> /dev/null
then
    echo "PM2 não encontrado, instalando..."
    npm install -g pm2
fi

# Reset shell colors
tput init

# Get project root
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  PROJECT_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$PROJECT_ROOT/$SOURCE"
done
PROJECT_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

# Required imports
source "${PROJECT_ROOT}"/variables/manifest.sh
source "${PROJECT_ROOT}"/utils/manifest.sh
source "${PROJECT_ROOT}"/lib/manifest.sh

# User configs file
if [[ ! -e "${PROJECT_ROOT}"/config ]]; then
  cat << EOF > "${PROJECT_ROOT}"/config
deploy_password=${deploy_password}
mysql_root_password=${mysql_root_password}
db_pass=${db_pass}
EOF
fi

# This file has passwords
chown root:root "${PROJECT_ROOT}"/config
chmod 700 "${PROJECT_ROOT}"/config
source "${PROJECT_ROOT}"/config

# Interactive CLI
inquiry_options

# Dependencies related
system_update
system_node_install
system_pm2_install
system_docker_install
system_puppeteer_dependencies
system_snapd_install

# System config
system_create_user

# Backend related
system_git_clone
backend_set_env
backend_redis_create
backend_node_dependencies
backend_node_build
backend_db_migrate
backend_db_seed
sudo -u deploy pm2 start backend_process_name

# Frontend related
frontend_set_env
frontend_node_dependencies
frontend_node_build
sudo -u deploy pm2 start frontend_process_name

echo "Whaticket primary installation completed for local testing without SSL using the local machine's IP address."
